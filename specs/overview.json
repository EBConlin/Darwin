{
  "project": "Darwin Lab",
  "description": "An evolutionary reasoning engine for hypothesis generation, evaluation, and optimization.",
  "modules": {
    "main.py": {
      "role": "Run full experiment loop",
      "functions": [
        "run_experiment()"
      ]
    },
    "agent.py": {
      "role": "Generate, mutate, and evaluate symbolic theories",
      "functions": [
        "generate_theory() -> dict",
        "mutate_theory(theory: dict) -> dict",
        "evaluate_theory(theory: dict, env) -> float"
      ]
    },
    "attribution_learned.py": {
      "role": "TreeLSTM-based neural attribution model",
      "functions": [
        "forward(theory_tree: dict, performance_score: float) -> List[float]",
        "train(dataset: List[Tuple[dict, float]])"
      ]
    },
    "bayesian_optimization.py": {
      "role": "Proposes new mutation/attribution strategies",
      "functions": [
        "suggest() -> dict",
        "update(score: float)"
      ]
    },
    "stimlang.py": {
      "role": "Linearizes theories as symbolic command sequences",
      "functions": [
        "add_command(cmd: str)",
        "serialize() -> str"
      ]
    },
    "cultural_evolution.py": {
      "role": "Selects top-performing theories",
      "functions": [
        "evolve(theories: List[dict]) -> List[dict]",
        "record(history_entry: dict)"
      ]
    },
    "visualization.py": {
      "role": "Plots evolution dynamics and attribution scores",
      "functions": [
        "plot_attribution_scores(score_list: List[float])",
        "plot_strategy_change(history: List[dict])"
      ]
    },
    "dashboard.py": {
      "role": "Aggregates real-time results and metadata",
      "functions": [
        "update(data: dict)",
        "render()"
      ]
    }
  },
  "flow": [
    "Agent generates theories",
    "Attribution model assigns credit",
    "BO optimizes strategy",
    "Cultural selection filters theories",
    "StimLang serializes",
    "Visualization and dashboard track system state"
  ]
}